 @mixin transition($args...) {
  -webkit-transition: $args;
  -moz-transition: $args;
  -ms-transition: $args;
  -o-transition: $args;
  transition: $args;
}

@mixin placeholder {
  &::-webkit-input-placeholder   {@content;}
  &::-moz-placeholder            {@content;}
  &:-ms-input-placeholder        {@content;}
  &:-moz-placeholder             {@content;}
}

// generic transform
@mixin transform($transforms) {
  -moz-transform: $transforms;
  -o-transform: $transforms;
  -ms-transform: $transforms;
  -webkit-transform: $transforms;
  transform: $transforms;
}

// rotate
@mixin rotate ($deg) {
  @include transform(rotate(#{$deg}deg));
}

// scale
@mixin scale($scale) {
  @include transform(scale($scale));
} 
// translate
@mixin translate ($x, $y) {
  @include transform(translate($x, $y));
}
// translateX
@mixin translateX($x) {
  @include transform(translateX($x));
}
// translateY  
@mixin translateY($y) {
  @include transform(translateY($y));
}
// skew
@mixin skew ($x, $y) {
  @include transform(skew(#{$x}deg, #{$y}deg));
}
// transform origin
@mixin transform-origin ($origin) {
  -moz-transform-origin: $origin;
  -o-transform-origin: $origin;
  -ms-transform-origin: $origin;
  -webkit-transform-origin: $origin;
  transform-origin: $origin;
}

@mixin text-emphasis-variant($parent, $color) {
  #{$parent} {
    color: $color !important;
  }
  @if $emphasized-link-hover-darken-percentage != 0 {
    a#{$parent} {
      @include hover-focus {
        color: $emphasized-link-hover-darken-percentage;
      }
    }
  }
}

@mixin clearfix() {
  &::after {
    display: block;
    clear: both;
    content: '';
  }
}

@mixin animation($str) {
  -webkit-animation: #{$str};
  -moz-animation: #{$str};
  -ms-animation: #{$str};
  -o-animation: #{$str};
  animation: #{$str};
}

@mixin animation-duration($str) {
  -webkit-animation-duration: #{$str};
  -moz-animation-duration: #{$str};
  -ms-animation-duration: #{$str};
  -o-animation-duration: #{$str};
  animation-duration: #{$str};
}